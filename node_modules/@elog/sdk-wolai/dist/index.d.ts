import * as _elog_types from '@elog/types';
import { DocProperties, DocDetail, BaseDoc } from '@elog/types';
import { RequestOptions } from '@elog/shared';

declare enum WolaiSortPresetEnum {
    /** 按自定义日期排序 */
    dateDesc = "dateDesc",
    dateAsc = "dateAsc",
    /** 按创建时间排序 */
    createTimeDesc = "createTimeDesc",
    createTimeAsc = "createTimeAsc",
    /** 按更新时间排序 */
    updateTimeDesc = "updateTimeDesc",
    updateTimeAsc = "updateTimeAsc",
    /** 按sort字段排序 */
    sortDesc = "sortDesc",
    sortAsc = "sortAsc"
}

interface WoLaiConfig {
    token: string;
    /** 文档ID */
    pageId: string;
    /** 是否启用目录 */
    catalog?: WoLaiCatalogConfig;
    /** API域名 */
    baseUrl?: string;
    /** 并发限制 */
    limit?: number;
    filter?: WolaiFilter;
    sort?: WolaiSort;
}
interface WolaiFilterItem {
    property: string;
    value: string;
}
interface WolaiSortItem {
    property: string;
    direction: string;
}
type WolaiFilter = boolean | WolaiFilterItem | WolaiFilterItem[];
type WolaiSort = boolean | WolaiSortPresetEnum | WolaiSortItem;
interface WolaiFilterAndSortParams {
    filter?: WolaiFilterItem | WolaiFilterItem[];
    sort?: WolaiSortItem;
}
/**
 * 文档块值
 */
interface WoLaiDocBlockValue {
    active: boolean;
    attributes: {
        page_view: boolean;
        title: Array<string[]>;
    };
    block_discuss_ids: string[];
    created_by: string;
    created_time: number;
    database_id: string;
    edited_by: string;
    edited_time: number;
    id: string;
    page_id: string;
    parent_id: string;
    parent_type: string;
    resolved_discuss_ids: string[];
    status: number;
    sub_nodes: string[];
    tableviews: string[];
    teamspace_id: string;
    type: string;
    version: number;
    view_count: number;
    workspace_id: string;
}
/**
 * 文档块
 */
interface WoLaiDocBlock {
    active: boolean;
    isPublic: boolean;
    role: string;
    value: WoLaiDocBlockValue;
}
interface WoLaiDatabaseTables {
    [key: string]: WoLaiDatabaseTable;
}
interface WoLaiDatabaseTablePropertyOption {
    option_id: string;
    property_id: string;
    value: string;
    color: string;
}
interface WoLaiDatabaseTableProperty {
    column_color: string;
    fill_title_background_color: boolean;
    fill_with_default_value: boolean;
    id: string;
    name: string;
    options: WoLaiDatabaseTablePropertyOption[];
    type: string;
    visibility: string;
}
interface WoLaiDatabaseTable {
    color: string;
    option_id: string;
    property_id: string;
    value: string;
}
interface WoLaiDatabaseTable {
    _id: string;
    block_id: string;
    created_by: string;
    created_time: string;
    edited_by: string;
    edited_time: string;
    last_edit_time: string;
    last_edit_user: string;
    properties: WoLaiDatabaseTableProperty[];
    release: number;
    rows_count: number;
    space_id: string;
    status: number;
    table_id: string;
    templates: string[];
    version: number;
}
interface WoLaiTablePage {
    block: {
        [key: string]: WoLaiDocBlock;
    };
    database_tables: WoLaiDatabaseTables;
}
interface WoLaiTableRow {
    _id: string;
    block_id: string;
    created_by: string;
    created_time: number;
    edited_by: string;
    edited_time: number;
    properties: {
        [key: string]: any[][];
    };
    status: number;
    table_id: string;
    template: boolean;
    version: number;
}
interface WoLaiDoc extends WoLaiTableRow {
    _index?: number;
    createdAt: number;
    updatedAt: number;
    properties: DocProperties;
}
interface WoLaiTableRows {
    blocks: WoLaiDocBlock[];
    rows: WoLaiTableRow[];
}
interface WoLaiCatalogConfig {
    enable: boolean;
    property?: string;
}

/**
 * WoLaiClient
 */
declare class WoLaiClient {
    config: WoLaiConfig;
    docList: WoLaiTableRow[];
    catalog: WoLaiTableRow[];
    filterAndSortParams: WolaiFilterAndSortParams;
    constructor(config: WoLaiConfig);
    /**
     * 初始化过滤和排序参数
     */
    initFilterAndSortParamsParams(): WolaiFilterAndSortParams;
    /**
     * send api request to yuque
     * @param api
     * @param reqOpts
     */
    request<T>(api: string, reqOpts: RequestOptions): Promise<T>;
    /**
     * 获取文章列表(不带详情)
     */
    getDocList(): Promise<WoLaiDoc[]>;
    /**
     * 获取文章详情
     */
    getDocDetail(row: WoLaiDoc): Promise<DocDetail>;
    /**
     * 获取文章详情列表
     * @param cachedDocs
     * @param ids
     */
    getDocDetailList(cachedDocs: WoLaiDoc[], ids: string[]): Promise<DocDetail[]>;
}

/**
 * Yuque SDK
 */
declare class WoLai {
    config: WoLaiConfig;
    ctx: WoLaiClient;
    pages: any[];
    constructor(options: WoLaiConfig);
    /**
     * list docs of a repo
     * @return {Promise<DocDetail[]>} return docs
     */
    getDocList(): Promise<BaseDoc[]>;
    /**
     * 获取文章详情列表
     * @param ids 需要下载的doc_id列表
     */
    getDocDetailList(ids: string[]): Promise<_elog_types.DocDetail[]>;
}

export { WoLaiCatalogConfig, WoLaiConfig, WoLaiDatabaseTable, WoLaiDatabaseTableProperty, WoLaiDatabaseTablePropertyOption, WoLaiDatabaseTables, WoLaiDoc, WoLaiDocBlock, WoLaiDocBlockValue, WoLaiTablePage, WoLaiTableRow, WoLaiTableRows, WolaiFilter, WolaiFilterAndSortParams, WolaiFilterItem, WolaiSort, WolaiSortItem, WoLai as default };
