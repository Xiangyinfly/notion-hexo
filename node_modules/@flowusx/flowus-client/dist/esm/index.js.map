{"version":3,"sources":["../../src/client.ts"],"sourcesContent":["import { Blocks, PageBlocks } from '@flowusx/flowus-types'\nimport { BlockType, out, request, RequestOptions } from '@flowusx/flowus-shared'\nimport { FlowUsConfig, MediaUrl } from './types'\nimport process from 'process'\n\n/**\n * FlowUs客户端API\n */\nexport class FlowUsClient {\n  private readonly _baseUrl: string\n  constructor(config?: FlowUsConfig) {\n    this._baseUrl = config?.baseUrl || 'https://flowus.cn/api'\n  }\n\n  /**\n   * 获取页面所有Block\n   * @param pageId\n   */\n  public async getPageBlocks(pageId: string) {\n    const pageBlocks = await this._fetch<PageBlocks>(`docs/${pageId}`, { method: 'GET' })\n    // 处理图片链接\n    // 获取可下载的图片链接\n    pageBlocks.blocks = await this.getOssUrl(pageBlocks.blocks)\n\n    return pageBlocks\n  }\n\n  /**\n   * 获取数据表格文档列表\n   * @param pageId\n   */\n  public async getDataTableData(pageId: string) {\n    const pageBlocks = await this._fetch<PageBlocks>(`docs/${pageId}`, { method: 'GET' })\n    const blocksKeys = Object.keys(pageBlocks.blocks)\n    // 第一个节点标记了该Block的属性是文档还是其他\n    const firstKey = blocksKeys[0]\n    const firstValue = pageBlocks.blocks[firstKey]\n    if (firstValue.type === BlockType.Data_Table) {\n      // 数据表格\n      return pageBlocks\n    } else if (firstValue.type === BlockType.Doc) {\n      // 文档类型\n      // 错误类型，请使用getPageBlocks\n      out.err('类型错误', '请使用 getPageBlocks 获取页面数据')\n    } else {\n      // 错误类型，暂不支持\n      out.err('类型错误', '暂不支持的文档类型')\n    }\n    process.exit(-1)\n  }\n\n  private async _fetch<T>(endpoint: string, reqOpts?: RequestOptions): Promise<T> {\n    const url = `${this._baseUrl}/${endpoint}`\n    const res = await request<T>(url, reqOpts)\n    if (res.data.code !== 200) {\n      // @ts-ignore\n      if (res.data?.msg?.includes('无访问权限')) {\n        out.err('暂无权限', `请检查页面是否开启公开分享`)\n      } else {\n        // @ts-ignore\n        out.err('请求错误', res.data.msg)\n      }\n      process.exit()\n    }\n    return res.data.data\n  }\n\n  public async getOssUrl(blocks: Blocks) {\n    const mediaBlocks: any[] = []\n    Object.keys(blocks).forEach((blockId) => {\n      const block = blocks[blockId]\n      // 媒体类型\n      if (block.type === 14) {\n        mediaBlocks.push({\n          blockId: block.uuid,\n          ossName: block.data.ossName,\n        })\n      }\n      if (block.type === 0 && block.data.cover) {\n        // 文档类型\n        mediaBlocks.push({\n          blockId: block.uuid,\n          ossName: block.data.cover,\n        })\n      }\n    })\n    const data = {\n      batch: mediaBlocks,\n    }\n    let medias = await this._fetch<MediaUrl[]>('file/create_urls', { data, method: 'POST' })\n    medias = medias.map((item, index) => {\n      return {\n        ...item,\n        blockId: mediaBlocks[index].blockId,\n      }\n    })\n    medias.forEach((media) => {\n      const blockId = media.blockId\n      blocks[blockId].data.fullLink = media.url\n    })\n    return blocks\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,WAAW,KAAK,eAA+B;AAExD,OAAO,aAAa;AAKb,IAAM,eAAN,MAAmB;AAAA,EAExB,YAAY,QAAuB;AACjC,SAAK,YAAW,iCAAQ,YAAW;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMa,cAAc,QAAgB;AAAA;AACzC,YAAM,aAAa,MAAM,KAAK,OAAmB,QAAQ,UAAU,EAAE,QAAQ,MAAM,CAAC;AAGpF,iBAAW,SAAS,MAAM,KAAK,UAAU,WAAW,MAAM;AAE1D,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMa,iBAAiB,QAAgB;AAAA;AAC5C,YAAM,aAAa,MAAM,KAAK,OAAmB,QAAQ,UAAU,EAAE,QAAQ,MAAM,CAAC;AACpF,YAAM,aAAa,OAAO,KAAK,WAAW,MAAM;AAEhD,YAAM,WAAW,WAAW,CAAC;AAC7B,YAAM,aAAa,WAAW,OAAO,QAAQ;AAC7C,UAAI,WAAW,SAAS,UAAU,YAAY;AAE5C,eAAO;AAAA,MACT,WAAW,WAAW,SAAS,UAAU,KAAK;AAG5C,YAAI,IAAI,4BAAQ,uEAA0B;AAAA,MAC5C,OAAO;AAEL,YAAI,IAAI,4BAAQ,wDAAW;AAAA,MAC7B;AACA,cAAQ,KAAK,EAAE;AAAA,IACjB;AAAA;AAAA,EAEc,OAAU,UAAkB,SAAsC;AAAA;AAnDlF;AAoDI,YAAM,MAAM,GAAG,KAAK,YAAY;AAChC,YAAM,MAAM,MAAM,QAAW,KAAK,OAAO;AACzC,UAAI,IAAI,KAAK,SAAS,KAAK;AAEzB,aAAI,eAAI,SAAJ,mBAAU,QAAV,mBAAe,SAAS,mCAAU;AACpC,cAAI,IAAI,4BAAQ,gFAAe;AAAA,QACjC,OAAO;AAEL,cAAI,IAAI,4BAAQ,IAAI,KAAK,GAAG;AAAA,QAC9B;AACA,gBAAQ,KAAK;AAAA,MACf;AACA,aAAO,IAAI,KAAK;AAAA,IAClB;AAAA;AAAA,EAEa,UAAU,QAAgB;AAAA;AACrC,YAAM,cAAqB,CAAC;AAC5B,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,YAAY;AACvC,cAAM,QAAQ,OAAO,OAAO;AAE5B,YAAI,MAAM,SAAS,IAAI;AACrB,sBAAY,KAAK;AAAA,YACf,SAAS,MAAM;AAAA,YACf,SAAS,MAAM,KAAK;AAAA,UACtB,CAAC;AAAA,QACH;AACA,YAAI,MAAM,SAAS,KAAK,MAAM,KAAK,OAAO;AAExC,sBAAY,KAAK;AAAA,YACf,SAAS,MAAM;AAAA,YACf,SAAS,MAAM,KAAK;AAAA,UACtB,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AACD,YAAM,OAAO;AAAA,QACX,OAAO;AAAA,MACT;AACA,UAAI,SAAS,MAAM,KAAK,OAAmB,oBAAoB,EAAE,MAAM,QAAQ,OAAO,CAAC;AACvF,eAAS,OAAO,IAAI,CAAC,MAAM,UAAU;AACnC,eAAO,iCACF,OADE;AAAA,UAEL,SAAS,YAAY,KAAK,EAAE;AAAA,QAC9B;AAAA,MACF,CAAC;AACD,aAAO,QAAQ,CAAC,UAAU;AACxB,cAAM,UAAU,MAAM;AACtB,eAAO,OAAO,EAAE,KAAK,WAAW,MAAM;AAAA,MACxC,CAAC;AACD,aAAO;AAAA,IACT;AAAA;AACF;","names":[]}